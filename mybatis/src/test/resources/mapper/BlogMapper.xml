<?xml version="1.0" encoding="UTF-8" ?>  
    <!DOCTYPE mapper  
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
      "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
      
    <mapper namespace="mapper.BlogMapper">
    <!--  新增记录  -->  
        <insert id="insertBlog" parameterType="Blog">  
            insert into t_blog(title,content,owner) values(#{title},#{content},#{owner})  
        </insert>  
    <!--  查询单条记录 -->  
        <select id="selectBlog" parameterType="int" resultType="Blog">  
            select * from t_blog where id = #{id}  
        </select>  
    <!--  修改记录   -->  
        <update id="updateBlog" parameterType="Blog">  
            update t_blog set title = #{title},content = #{content},owner = #{owner} where id = #{id}  
        </update>  
    <!--  查询所有记录，查询多条记录即返回结果是一个集合的时候，resultType不是集合类型，而是集合所包含的类型 -->  
        <select id="selectAll" resultType="Blog">  
            select * from t_blog  
        </select>  
    <!--  模糊查询   -->  
        <select id="fuzzyQuery" resultType="Blog" parameterType="java.lang.String">  
            select * from t_blog where title like "%"#{title}"%"  
        </select>  
    <!--  删除记录   -->  
        <delete id="deleteBlog" parameterType="int">  
            delete from t_blog where id = #{id}  
        </delete>  
        
        
      <select id="dynamicIfTest" parameterType="Blog" resultType="Blog">  
        select * from t_blog where 1 = 1  
        <if test="title != null">  
            and title = #{title}  
        </if>  
        <if test="content != null">  
            and content = #{content}  
        </if>  
        <if test="owner != null">  
            and owner = #{owner}  
        </if>  
    </select>  
    <!-- if else -->
     <select id="dynamicChooseTest" parameterType="Blog" resultType="Blog">  
        select * from t_blog where 1 = 1   
        <choose>  
            <when test="title != null">  
                and title = #{title}  
            </when>  
            <when test="content != null">  
                and content = #{content}  
            </when>  
            <otherwise>  
                and owner = "owner1"  
            </otherwise>  
        </choose>  
    </select>
    <!-- 智能处理where and or-->
    <select id="dynamicWhereTest" parameterType="Blog" resultType="Blog">  
        select * from t_blog   
        <where>  
            <if test="title != null">  
                title = #{title}  
            </if>  
            <if test="content != null">  
                and content = #{content}  
            </if>  
            <if test="owner != null">  
                and owner = #{owner}  
            </if>  
        </where>  
    </select> 
    <!-- 加上前后缀 -->
     <select id="dynamicTrimTest" parameterType="Blog" resultType="Blog">  
        select * from t_blog   
        <trim prefix="where" prefixOverrides="and |or">  
            <if test="title != null">  
                title = #{title}  
            </if>  
            <if test="content != null">  
                and content = #{content}  
            </if>  
            <if test="owner != null">  
                or owner = #{owner}  
            </if>  
        </trim>  
    </select>
    <update id="dynamicSetTest" parameterType="Blog">  
        update t_blog  
        <set>  
            <if test="title != null">  
                title = #{title},  
            </if>  
            <if test="content != null">  
                content = #{content},  
            </if>  
            <if test="owner != null">  
                owner = #{owner}  
            </if>  
        </set>  
        where id = #{id}  
    </update> 
    <select id="dynamicForeachTest" resultType="Blog">  
        select * from t_blog where id in  
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">  
            #{item}  
        </foreach>  
    </select>      
    <select id="dynamicForeach2Test" resultType="Blog">  
        select * from t_blog where id in  
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">  
            #{item}  
        </foreach>  
    </select>   
    <select id="dynamicForeach3Test" resultType="Blog">  
        select * from t_blog where title like "%"#{title}"%" and id in  
        <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">  
            #{item}  
        </foreach>  
    </select>   
    </mapper>  